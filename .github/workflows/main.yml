name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# Keep only one run per ref/PR active
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Least-privilege default token
permissions:
  contents: read

jobs:
  linux:
    name: Linux (${{ matrix.flavor }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flavor: [ arch, debian, fedora, ubuntu ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        env:
          DOCKER_BUILDKIT: "1"
        run: |
          docker build -f Dockerfile.${{ matrix.flavor }} -t profanity:${{ matrix.flavor }} .
      - name: Run CI build script inside container
        run: |
          docker run --rm -t profanity:${{ matrix.flavor }} ./ci-build.sh

  code-style:
    name: Check coding style
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If this check fails, update the expected count or list accordingly.
      - name: Check auto types are up-to-date (count)
        shell: bash
        run: |
          set -euo pipefail
          COUNT="$(find src -type f -name '*.[ch]' -exec awk '/^#define auto_[[:alnum:]_]*\b/ {print $2}' '{}' \; | sort -u | wc -l)"
          test "$COUNT" -eq 8

      - name: Check auto types are initialized (no raw declarations)
        shell: bash
        run: |
          set -euo pipefail
          if grep -P 'auto_(char|gchar|gcharv|guchar|jid|sqlite|gfd|FILE)[\w *]*;$' -r src ; then
            exit 1
          fi

      - name: Run clang-format (check only)
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: '16'
          check-path: 'src'

  spell-check:
    name: Check spelling
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install codespell
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends codespell

      - name: Run codespell
        run: |
          # Adjust -S to skip build artifacts or vendored dirs if needed
          codespell -q 3 -S "build,*.min.js" .
